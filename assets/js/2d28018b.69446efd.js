"use strict";(globalThis.webpackChunkdocumentation=globalThis.webpackChunkdocumentation||[]).push([[520],{1755:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"publishing","title":"Publishing Messages","description":"In MQTT, \\"publish\\" is an operation that allows an MQTT client to send a message to an MQTT broker, which then distributes the message to all subscribed clients interested in the topic of the message.","source":"@site/docs/publishing.md","sourceDirName":".","slug":"/publishing","permalink":"/hivemq-mqtt-client-dotnet/docs/publishing","draft":false,"unlisted":false,"editUrl":"https://github.com/hivemq/hivemq-mqtt-client-dotnet/tree/main/Documentation/docs/publishing.md","tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"sidebar_position":60},"sidebar":"docsSidebar","previous":{"title":"Subscribing to Topics","permalink":"/hivemq-mqtt-client-dotnet/docs/subscribing"},"next":{"title":"Lifecycle Events","permalink":"/hivemq-mqtt-client-dotnet/docs/events/"}}');var n=s(4848),l=s(8453);const o={sidebar_position:60},a="Publishing Messages",r={},c=[{value:"Simple",id:"simple",level:2},{value:"With Options",id:"with-options",level:2},{value:"<code>PublishMessagebuilder</code> Reference",id:"publishmessagebuilder-reference",level:3},{value:"MQTT5PublishMessage",id:"mqtt5publishmessage",level:2},{value:"Return Value of Publish: <code>PublishResult</code>",id:"return-value-of-publish-publishresult",level:2},{value:"Quality of Service (QoS) and <code>PublishResult</code>",id:"quality-of-service-qos-and-publishresult",level:2},{value:"Retrieving the Reason Code",id:"retrieving-the-reason-code",level:2},{value:"See Also",id:"see-also",level:2}];function h(e){const i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"publishing-messages",children:"Publishing Messages"})}),"\n",(0,n.jsx)(i.p,{children:'In MQTT, "publish" is an operation that allows an MQTT client to send a message to an MQTT broker, which then distributes the message to all subscribed clients interested in the topic of the message.'}),"\n",(0,n.jsx)(i.h2,{id:"simple",children:"Simple"}),"\n",(0,n.jsx)(i.p,{children:"Use the PublishAsync method to publish a payload to the desired topic by providing the topic string and payload as parameters."}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-csharp",children:'var publishResult = await client.PublishAsync("topic1/example", "Hello Payload")\n'})}),"\n",(0,n.jsxs)(i.p,{children:["Optionally, you can specify the desired quality of service (QoS) level for the publish. By default, the QoS level is set to ",(0,n.jsx)(i.code,{children:"QualityOfService.AtMostOnceDelivery"}),"."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-csharp",children:'using HiveMQtt.MQTT5.Types; // For the QualityOfService enum\n\nvar publishResult = await client.PublishAsync("topic1/example", "Hello Payload", QualityOfService.ExactlyOnceDelivery)\n'})}),"\n",(0,n.jsx)(i.h2,{id:"with-options",children:"With Options"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"PublishMessageBuilder"})," class provides a convenient way to construct MQTT publish messages with various options and properties. It allows you to customize the topic, payload, quality of service (QoS) level, retain flag, and other attributes of the message."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-csharp",children:'var publishMessage = new PublishMessageBuilder().\n                            WithTopic("topic1/example").\n                            WithPayload("{\'HiveMQ\': \'\ud83d\udc4d\'}").\n                            WithContentType("application/json")\n                            WithResponseTopic("response/topic")\n                            Build();\n\nawait client.PublishAsync(publishMessage).ConfigureAwait(false);\n'})}),"\n",(0,n.jsxs)(i.p,{children:["By using ",(0,n.jsx)(i.code,{children:"PublishMessageBuilder"}),", you can easily construct MQTT publish messages with the desired properties and options. It provides a fluent and intuitive way to customize the topic, payload, QoS level, retain flag, and other attributes of the message."]}),"\n",(0,n.jsxs)(i.h3,{id:"publishmessagebuilder-reference",children:[(0,n.jsx)(i.code,{children:"PublishMessagebuilder"})," Reference"]}),"\n",(0,n.jsxs)(i.p,{children:["To illustrate ",(0,n.jsx)(i.em,{children:"each and every possible call"})," with ",(0,n.jsx)(i.code,{children:"PublishMessageBuilder"}),", see the following example:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-csharp",children:'var publishMessage = new PublishMessageBuilder()\n    .WithTopic("topic1/example")\n    .WithPayload("Hello, HiveMQtt!")\n    .WithQualityOfServiceLevel(QualityOfService.AtLeastOnceDelivery)\n    .WithRetainFlag(true)\n    .WithPayloadFormatIndicator(MQTT5PayloadFormatIndicator.UTF8Encoded)\n    .WithContentType("application/json")\n    .WithResponseTopic("response/topic")\n    .WithCorrelationData(Encoding.UTF8.GetBytes("correlation-data"))\n    .WithUserProperty("property1", "value1")\n    .WithUserProperties(new Dictionary<string, string> { { "property1", "value1" }, { "property2", "value2" } });\n    .WithMessageExpiryInterval(3600)\n    .WithSubscriptionIdentifier(123)\n    .WithSubscriptionIdentifiers(1, 2, 3)\n    .WithTopicAlias(456)\n    .WithContentTypeAlias(789)\n    .WithResponseTopicAlias(987)\n    .Build()\n'})}),"\n",(0,n.jsx)(i.h2,{id:"mqtt5publishmessage",children:"MQTT5PublishMessage"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.a,{href:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/blob/main/Source/HiveMQtt/MQTT5/Types/MQTT5PublishMessage.cs",children:"MQTT5PublishMessage"})," class represents the entirety of a publish message in MQTT.  If you construct this class directly, you can access all of the MQTT publish options such as ",(0,n.jsx)(i.code,{children:"Retain"}),", ",(0,n.jsx)(i.code,{children:"PayloadFormatIndicator"}),", ",(0,n.jsx)(i.code,{children:"UserProperties"})," and so forth."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-csharp",children:'var message = new MQTT5PublishMessage\n{\n    Topic = topic,\n    Payload = Encoding.ASCII.GetBytes(payload),\n    QoS = qos,\n};\n\nmessage.Retain = True\nmessage.UserProperties.Add("Client-Geo", "-33.8688, 151.2093");\n\nvar result = await client.PublishAsync(message);\n'})}),"\n",(0,n.jsxs)(i.p,{children:["For the full details, see the source code on ",(0,n.jsx)(i.a,{href:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/blob/main/Source/HiveMQtt/MQTT5/Types/MQTT5PublishMessage.cs",children:"MQTT5PublishMessage"}),"."]}),"\n",(0,n.jsxs)(i.h2,{id:"return-value-of-publish-publishresult",children:["Return Value of Publish: ",(0,n.jsx)(i.code,{children:"PublishResult"})]}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"PublishAsync"})," method in the HiveMQtt client library returns an instance of the ",(0,n.jsx)(i.code,{children:"PublishResult"})," class. This object provides detailed information about the outcome of the publish operation."]}),"\n",(0,n.jsxs)(i.h2,{id:"quality-of-service-qos-and-publishresult",children:["Quality of Service (QoS) and ",(0,n.jsx)(i.code,{children:"PublishResult"})]}),"\n",(0,n.jsxs)(i.p,{children:["The information contained in the ",(0,n.jsx)(i.code,{children:"PublishResult"})," object varies depending on the Quality of Service (QoS) level used for the publish operation."]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["QoS Level 0 (",(0,n.jsx)(i.code,{children:"QualityOfService.AtMostOnceDelivery"}),'): This level is often referred to as "fire-and-forget". It does not provide any acknowledgement of delivery, and as such, the ',(0,n.jsx)(i.code,{children:"PublishResult"})," object does not contain any meaningful information."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["QoS Level 1 (",(0,n.jsx)(i.code,{children:"QualityOfService.AtLeastOnceDelivery"}),"): This level ensures that the message is delivered at least once. The ",(0,n.jsx)(i.code,{children:"PublishResult"})," object for this QoS level contains a ",(0,n.jsx)(i.code,{children:"QoS1ReasonCode"})," property, which provides information about the outcome of the publish operation."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["QoS Level 2 (",(0,n.jsx)(i.code,{children:"QualityOfService.ExactlyOnceDelivery"}),"): This level ensures that the message is delivered exactly once. The ",(0,n.jsx)(i.code,{children:"PublishResult"})," object for this QoS level contains a ",(0,n.jsx)(i.code,{children:"QoS2ReasonCode"})," property, which provides information about the outcome of the publish operation."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"retrieving-the-reason-code",children:"Retrieving the Reason Code"}),"\n",(0,n.jsxs)(i.p,{children:["For convenience, the ",(0,n.jsx)(i.code,{children:"PublishResult"})," class provides a ",(0,n.jsx)(i.code,{children:"ReasonCode"})," method. This method automatically retrieves the appropriate reason code (",(0,n.jsx)(i.code,{children:"QoS1ReasonCode"})," or ",(0,n.jsx)(i.code,{children:"QoS2ReasonCode"}),") based on the QoS level of the publish operation. This allows you to easily access the outcome of the publish operation without having to check the QoS level manually."]}),"\n",(0,n.jsx)(i.h2,{id:"see-also",children:"See Also"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/blob/main/Source/HiveMQtt/Client/PublishMessageBuilder.cs",children:"PublishMessageBuilder.cs"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/blob/main/Source/HiveMQtt/MQTT5/Types/MQTT5PublishMessage.cs",children:"MQTT5PublishMessage.cs"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/blob/main/Source/HiveMQtt/MQTT5/Types/QualityOfService.cs",children:"QualityOfService.cs"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"https://github.com/hivemq/hivemq-mqtt-client-dotnet/blob/main/Source/HiveMQtt/Client/Results/PublishResult.cs",children:"PublishResult.cs"})}),"\n"]})]})}function d(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>a});var t=s(6540);const n={},l=t.createContext(n);function o(e){const i=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(l.Provider,{value:i},e.children)}}}]);