"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2264],{4558:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"reference/last_will_and_testament","title":"LastWillAndTestament","description":"The LastWillAndTestament class represents a Last Will and Testament message in the MQTT protocol. This message is sent by the broker on behalf of a client if the client disconnects unexpectedly. It contains details such as the topic, payload, Quality of Service (QoS), and other optional properties.","source":"@site/docs/reference/last_will_and_testament.md","sourceDirName":"reference","slug":"/reference/last_will_and_testament","permalink":"/hivemq-mqtt-client-dotnet/docs/reference/last_will_and_testament","draft":false,"unlisted":false,"editUrl":"https://github.com/hivemq/hivemq-mqtt-client-dotnet/tree/main/Documentation/docs/reference/last_will_and_testament.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"DisconnectOptionsBuilder","permalink":"/hivemq-mqtt-client-dotnet/docs/reference/disconnect_options_builder"},"next":{"title":"LastWillAndTestamentBuilder","permalink":"/hivemq-mqtt-client-dotnet/docs/reference/last_will_and_testament_builder"}}');var l=n(4848),i=n(8453);const a={},r="LastWillAndTestament",c={},o=[{value:"Constructors",id:"constructors",level:2},{value:"LastWillAndTestament(string topic, string payload, QualityOfService qos = QualityOfService.AtMostOnceDelivery, bool retain = false)",id:"lastwillandtestamentstring-topic-string-payload-qualityofservice-qos--qualityofserviceatmostoncedelivery-bool-retain--false",level:3},{value:"LastWillAndTestament(string topic, byte[] payload, QualityOfService qos = QualityOfService.AtMostOnceDelivery, bool retain = false)",id:"lastwillandtestamentstring-topic-byte-payload-qualityofservice-qos--qualityofserviceatmostoncedelivery-bool-retain--false",level:3},{value:"Properties",id:"properties",level:2},{value:"Topic",id:"topic",level:3},{value:"Payload",id:"payload",level:3},{value:"PayloadAsString",id:"payloadasstring",level:3},{value:"QoS",id:"qos",level:3},{value:"Retain",id:"retain",level:3},{value:"WillDelayInterval",id:"willdelayinterval",level:3},{value:"MessageExpiryInterval",id:"messageexpiryinterval",level:3},{value:"ContentType",id:"contenttype",level:3},{value:"ResponseTopic",id:"responsetopic",level:3},{value:"CorrelationData",id:"correlationdata",level:3},{value:"UserProperties",id:"userproperties",level:3},{value:"Methods",id:"methods",level:2},{value:"Validate()",id:"validate",level:3}];function d(e){const s={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"lastwillandtestament",children:"LastWillAndTestament"})}),"\n",(0,l.jsxs)(s.p,{children:["The ",(0,l.jsx)(s.code,{children:"LastWillAndTestament"})," class represents a Last Will and Testament message in the MQTT protocol. This message is sent by the broker on behalf of a client if the client disconnects unexpectedly. It contains details such as the topic, payload, Quality of Service (QoS), and other optional properties."]}),"\n",(0,l.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,l.jsx)(s.h3,{id:"lastwillandtestamentstring-topic-string-payload-qualityofservice-qos--qualityofserviceatmostoncedelivery-bool-retain--false",children:"LastWillAndTestament(string topic, string payload, QualityOfService qos = QualityOfService.AtMostOnceDelivery, bool retain = false)"}),"\n",(0,l.jsxs)(s.p,{children:["Initializes a new instance of the ",(0,l.jsx)(s.code,{children:"LastWillAndTestament"})," class with a UTF-8 encoded payload."]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"LastWillAndTestament(string topic, string payload, QualityOfService qos = QualityOfService.AtMostOnceDelivery, bool retain = false);\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"topic"})," ",(0,l.jsx)(s.em,{children:"(string)"}),": The topic of the message."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"payload"})," ",(0,l.jsx)(s.em,{children:"(string)"}),": The payload in UTF-8 encoded format."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"qos"})," ",(0,l.jsx)(s.em,{children:"(QualityOfService)"}),": The QoS level (default: AtMostOnceDelivery)."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"retain"})," ",(0,l.jsx)(s.em,{children:"(bool)"}),": Whether the message should be retained by the broker."]}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:'var lwt = new LastWillAndTestament("disconnect/topic", "Client disconnected", QualityOfService.AtLeastOnce, true);\n'})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"lastwillandtestamentstring-topic-byte-payload-qualityofservice-qos--qualityofserviceatmostoncedelivery-bool-retain--false",children:"LastWillAndTestament(string topic, byte[] payload, QualityOfService qos = QualityOfService.AtMostOnceDelivery, bool retain = false)"}),"\n",(0,l.jsxs)(s.p,{children:["Initializes a new instance of the ",(0,l.jsx)(s.code,{children:"LastWillAndTestament"})," class with a binary payload."]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"LastWillAndTestament(string topic, byte[] payload, QualityOfService qos = QualityOfService.AtMostOnceDelivery, bool retain = false);\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"topic"})," ",(0,l.jsx)(s.em,{children:"(string)"}),": The topic of the message."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"payload"})," ",(0,l.jsx)(s.em,{children:"(byte[])"}),": The payload in binary format."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"qos"})," ",(0,l.jsx)(s.em,{children:"(QualityOfService)"}),": The QoS level (default: AtMostOnceDelivery)."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"retain"})," ",(0,l.jsx)(s.em,{children:"(bool)"}),": Whether the message should be retained by the broker."]}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:'var lwt = new LastWillAndTestament("disconnect/topic", Encoding.UTF8.GetBytes("Client disconnected"), QualityOfService.ExactlyOnce, true);\n'})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(s.h3,{id:"topic",children:"Topic"}),"\n",(0,l.jsx)(s.p,{children:"Gets or sets the topic of the message."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"string Topic { get; set; }\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:'lwt.Topic = "status/update";\n'})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"payload",children:"Payload"}),"\n",(0,l.jsx)(s.p,{children:"Gets or sets the payload as a byte array."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"byte[]? Payload { get; set; }\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:'lwt.Payload = Encoding.UTF8.GetBytes("Disconnected");\n'})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"payloadasstring",children:"PayloadAsString"}),"\n",(0,l.jsx)(s.p,{children:"Gets or sets the payload as a UTF-8 encoded string."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"string PayloadAsString { get; set; }\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:'lwt.PayloadAsString = "Disconnected";\n'})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"qos",children:"QoS"}),"\n",(0,l.jsx)(s.p,{children:"Gets or sets the Quality of Service level."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"QualityOfService QoS { get; set; }\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"lwt.QoS = QualityOfService.ExactlyOnce;\n"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"retain",children:"Retain"}),"\n",(0,l.jsx)(s.p,{children:"Gets or sets whether the message should be retained by the broker."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"bool Retain { get; set; }\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"lwt.Retain = true;\n"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"willdelayinterval",children:"WillDelayInterval"}),"\n",(0,l.jsx)(s.p,{children:"Gets or sets the delay before the Last Will and Testament is sent."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"long? WillDelayInterval { get; set; }\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"lwt.WillDelayInterval = 60; // Delay of 60 seconds\n"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"messageexpiryinterval",children:"MessageExpiryInterval"}),"\n",(0,l.jsx)(s.p,{children:"Gets or sets the lifetime of the message in seconds."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"long? MessageExpiryInterval { get; set; }\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"lwt.MessageExpiryInterval = 3600; // Expires in 1 hour\n"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"contenttype",children:"ContentType"}),"\n",(0,l.jsx)(s.p,{children:"Gets or sets the content type of the payload."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"string? ContentType { get; set; }\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:'lwt.ContentType = "text/plain";\n'})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"responsetopic",children:"ResponseTopic"}),"\n",(0,l.jsx)(s.p,{children:"Gets or sets the topic to which the client should publish a response."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"string? ResponseTopic { get; set; }\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:'lwt.ResponseTopic = "response/topic";\n'})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"correlationdata",children:"CorrelationData"}),"\n",(0,l.jsx)(s.p,{children:"Gets or sets the correlation data for the message."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"byte[]? CorrelationData { get; set; }\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:'lwt.CorrelationData = Encoding.UTF8.GetBytes("correlation-id");\n'})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"userproperties",children:"UserProperties"}),"\n",(0,l.jsx)(s.p,{children:"Gets or sets a dictionary of user properties for the message."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"Dictionary<string, string> UserProperties { get; set; }\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:'lwt.UserProperties["key"] = "value";\n'})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(s.h3,{id:"validate",children:"Validate()"}),"\n",(0,l.jsxs)(s.p,{children:["Validates the ",(0,l.jsx)(s.code,{children:"LastWillAndTestament"})," instance for correctness."]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:"bool Validate();\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Exceptions"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"HiveMQttClientException"}),": Thrown if the topic or payload is invalid."]}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-csharp",children:'try\n{\n    lwt.Validate();\n}\ncatch (HiveMQttClientException ex)\n{\n    Console.WriteLine($"Validation failed: {ex.Message}");\n}\n'})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>r});var t=n(6540);const l={},i=t.createContext(l);function a(e){const s=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);