"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4318],{8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var i=n(6540);const o={},c=i.createContext(o);function l(e){const t=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(c.Provider,{value:t},e.children)}},9717:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>C,frontMatter:()=>l,metadata:()=>i,toc:()=>s});const i=JSON.parse('{"id":"how-to/configure-logging","title":"Configure Logging","description":"The HiveMQtt package uses NLog and can be configured with a configuration file (NLog.config).  Having this file in the same directory of your executable will configure the HiveMQtt logger to output as configured:","source":"@site/docs/how-to/configure-logging.md","sourceDirName":"how-to","slug":"/how-to/configure-logging","permalink":"/hivemq-mqtt-client-dotnet/docs/how-to/configure-logging","draft":false,"unlisted":false,"editUrl":"https://github.com/hivemq/hivemq-mqtt-client-dotnet/tree/main/Documentation/docs/how-to/configure-logging.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Custom Client Certificates","permalink":"/hivemq-mqtt-client-dotnet/docs/how-to/client-certificates"},"next":{"title":"Securely Connect to a Broker with Basic Authentication Credentials","permalink":"/hivemq-mqtt-client-dotnet/docs/how-to/connect-with-auth"}}');var o=n(4848),c=n(8453);const l={},r="Configure Logging",a={},s=[{value:"See Also",id:"see-also",level:2}];function g(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"configure-logging",children:"Configure Logging"})}),"\n",(0,o.jsxs)(t.p,{children:["The HiveMQtt package uses ",(0,o.jsx)(t.a,{href:"https://github.com/NLog/NLog",children:"NLog"})," and can be configured with a configuration file (",(0,o.jsx)(t.code,{children:"NLog.config"}),").  Having this file in the same directory of your executable will configure the HiveMQtt logger to output as configured:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-xml",children:'<?xml version="1.0" encoding="utf-8" ?>\n<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"\n      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n\n  <targets>\n    <target name="logfile" xsi:type="File" fileName="HiveMQtt.log" />\n    <target name="logconsole" xsi:type="Console" />\n  </targets>\n\n  <rules>\n     \x3c!-- minlevel can be Debug, Info, Warn, Error and Fatal or Trace --\x3e\n    <logger name="HiveMQtt.*" minlevel="Error" writeTo="logconsole" />\n  </rules>\n</nlog>\n\n'})}),"\n",(0,o.jsxs)(t.p,{children:["Setting ",(0,o.jsx)(t.code,{children:"minlevel"})," to ",(0,o.jsx)(t.code,{children:"Trace"})," will output all activity in the HiveMQtt package down to packet and event handling.  Using this level will produce a lot of output such as the following:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-log",children:"2024-03-14 15:40:18.2252|TRACE|HiveMQtt.Client.HiveMQClient|Trace Level Logging Legend:\n2024-03-14 15:40:18.2312|TRACE|HiveMQtt.Client.HiveMQClient|    -(W)-   == ConnectionWriter\n2024-03-14 15:40:18.2312|TRACE|HiveMQtt.Client.HiveMQClient|    -(PW)-   == ConnectionPublishWriter\n2024-03-14 15:40:18.2312|TRACE|HiveMQtt.Client.HiveMQClient|    -(R)-   == ConnectionReader\n2024-03-14 15:40:18.2312|TRACE|HiveMQtt.Client.HiveMQClient|    -(RPH)- == ReceivedPacketsHandler\n2024-03-14 15:40:18.2320|INFO|HiveMQtt.Client.HiveMQClient|Connecting to broker at 127.0.0.1:1883\n2024-03-14 15:40:18.2343|TRACE|HiveMQtt.Client.HiveMQClient|BeforeConnectEventLauncher\n2024-03-14 15:40:18.2460|TRACE|HiveMQtt.Client.HiveMQClient|Socket connected to 127.0.0.1:1883\n2024-03-14 15:40:18.2464|TRACE|HiveMQtt.Client.HiveMQClient|Queuing packet for send: HiveMQtt.MQTT5.Packets.ConnectPacket\n2024-03-14 15:40:18.2464|TRACE|HiveMQtt.Client.HiveMQClient|-(RPH)- Starting...Connecting\n2024-03-14 15:40:18.2464|TRACE|HiveMQtt.Client.HiveMQClient|-(R)- ConnectionReader Starting...Connecting\n2024-03-14 15:40:18.2464|TRACE|HiveMQtt.Client.HiveMQClient|5: ConnectionMonitor Starting...Connecting\n2024-03-14 15:40:18.2464|TRACE|HiveMQtt.Client.HiveMQClient|-(RPH)- 0 received packets currently waiting to be processed.\n2024-03-14 15:40:18.2464|TRACE|HiveMQtt.Client.HiveMQClient|-(W)- ConnectionWriter Starting...Connecting\n2024-03-14 15:40:18.2464|TRACE|HiveMQtt.Client.HiveMQClient|-(W)- ConnectionWriter: 1 packets waiting to be sent.\n2024-03-14 15:40:18.2476|TRACE|HiveMQtt.Client.HiveMQClient|-(W)- --\x3e Sending ConnectPacket id=0\n2024-03-14 15:40:18.2529|TRACE|HiveMQtt.Client.HiveMQClient|OnConnectSentEventLauncher\n2024-03-14 15:40:18.2529|TRACE|HiveMQtt.Client.HiveMQClient|-(W)- ConnectionWriter: 0 packets waiting to be sent.\n2024-03-14 15:40:18.2732|TRACE|HiveMQtt.Client.HiveMQClient|ReadAsync: Read Buffer Length 11\n2024-03-14 15:40:18.2765|TRACE|HiveMQtt.MQTT5.PacketDecoder|PacketDecoder: Decoded Packet: consumed=11, packet=HiveMQtt.MQTT5.Packets.ConnAckPacket id=0\n2024-03-14 15:40:18.2765|TRACE|HiveMQtt.Client.HiveMQClient|-(R)- <-- Received ConnAckPacket.  Adding to receivedQueue.\n2024-03-14 15:40:18.2765|TRACE|HiveMQtt.Client.HiveMQClient|-(RPH)- <-- Received ConnAck id=0\n2024-03-14 15:40:18.2765|TRACE|HiveMQtt.Client.HiveMQClient|OnConnAckReceivedEventLauncher\n2024-03-14 15:40:18.2775|TRACE|HiveMQtt.Client.HiveMQClient|AfterConnectEventLauncher\n"})}),"\n",(0,o.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/NLog/NLog",children:"NLog"})}),"\n"]})]})}function C(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}}}]);