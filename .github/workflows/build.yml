name: Build

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published
  workflow_dispatch:

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set the build number in MinVer.
  MINVERBUILDMETADATA: build.${{github.run_number}}

jobs:
  build:
    name: Build-${{matrix.os}}
    runs-on: ${{matrix.os}}

    services:
      hivemq:
        image: hivemq/hivemq4:latest
        ports:
          - 1883:1883
          - 8000:8000
          - 8080:8080
        options: >-
          --health-cmd "curl -I http://localhost:8080/"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --health-start-period 30s

    strategy:
      matrix:
        # Disable other platforms until post Beta
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3.3.0
        with:
          lfs: true
          fetch-depth: 0
      - name: "Install .NET Core SDK"
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: '7.0.103'
      - name: "Dotnet Tool Restore"
        run: dotnet tool restore
        shell: pwsh
      - name: "Dotnet Cake Build"
        run: dotnet cake --target=Build
        shell: pwsh
      - name: "Dotnet Cake Test"
        run: dotnet cake --target=Test
        shell: pwsh
      # - name: "Dotnet Cake Pack"
      #   run: dotnet cake --target=Pack
      #   shell: pwsh
      # - name: "Publish Artifacts"
      #   uses: actions/upload-artifact@v3.1.2
      #   with:
      #     name: ${{matrix.os}}
      #     path: "./Artifacts"

  push-nuget:
    name: "Push NuGet Packages"
    needs: build
    if: github.event_name == 'release'
    environment:
      name: "NuGet"
      url: https://www.nuget.org/packages/HiveMQtt
    runs-on: windows-latest
    steps:
      - name: "Download Artifact"
        uses: actions/download-artifact@v3.0.1
        with:
          name: "windows-latest"
      - name: "Dotnet NuGet Push"
        run: |
          Get-ChildItem .\ -Filter *.nupkg |
          Where-Object { !$_.Name.Contains('preview') } |
          ForEach-Object { dotnet nuget push $_ --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{secrets.NUGET_API_KEY}} }
        shell: pwsh

  # push-github-packages:
  #   name: "Push GitHub Packages"
  #   needs: build
  #   if: github.ref == 'refs/heads/main' || github.event_name == 'release'
  #   environment:
  #     name: "GitHub Packages"
  #     url: https://github.com/Username/Project/packages
  #   permissions:
  #     packages: write
  #   runs-on: windows-latest
  #   steps:
  #     - name: "Download Artifact"
  #       uses: actions/download-artifact@v3.0.2
  #       with:
  #         name: "windows-latest"
  #     - name: "Dotnet NuGet Add Source"
  #       run: dotnet nuget add source https://nuget.pkg.github.com/Username/index.json --name GitHub --username Username --password ${{secrets.GITHUB_TOKEN}}
  #       shell: pwsh
  #     - name: "Dotnet NuGet Push"
  #       run: dotnet nuget push .\*.nupkg --api-key ${{ github.token }} --source GitHub --skip-duplicate
  #       shell: pwsh
